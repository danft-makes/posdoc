

# This file was *autogenerated* from the file workbench.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)
load('../utils.sage')
C1 = x*z ; C2 = z**_sage_const_2 -x*y ; f = (C2)*(C2+C1) ; C = Curve(f)

# tests
d = MinimumDegreeSyzygy(f)['mindegree_generators'][_sage_const_0 ]
print(d)

#kbar = QQbar ; Rbar.<x,y,z> = PolynomialRing(kbar,3) ; P2bar = ProjectiveSpace(Rbar)
#IJ = JacobianIdeal(Rbar(f)) ; J = P2.subscheme(IJ) ; Zsection = J.rational_points()
e1tangent = C.tangents(P2(_sage_const_1 ,_sage_const_0 ,_sage_const_0 ))
e2tangent = C.tangents(P2(_sage_const_0 ,_sage_const_1 ,_sage_const_0 ))

print(e1tangent,e2tangent)

